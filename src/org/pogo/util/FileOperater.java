package org.pogo.util;

import java.io.*;

public class FileOperater {
	/**
	 * åˆ›å»ºç›®å½•
	 * 
	 * @param folderPath
	 *            å¦‚ c:/abc
	 * @return boolean
	 */
	public void newFolder(String folderPath) {
		File myFilePath = new File(folderPath);
		if (!myFilePath.exists()) {
			myFilePath.mkdir();
		}
	}

	/**
	 * åˆ›å»ºæ–‡ä»¶
	 * 
	 * @param fileNameæ–‡ä»¶è·¯å¾„å?Šå??ç§°
	 *            å¦‚c:/test.txt
	 * @param fileContentæ–‡ä»¶å†…å®¹
	 * @throws IOException
	 */
	public void newFile(String fileName, String fileContent) throws IOException {
		File myFilePath = new File(fileName);
		if (!myFilePath.exists()) {
			myFilePath.createNewFile();
		}
		FileWriter resultFile = new FileWriter(myFilePath);
		PrintWriter myFile = new PrintWriter(resultFile);
		String strContent = fileContent;
		myFile.println(strContent);
		resultFile.close();
	}

	/**
	 * åˆ é™¤æ–‡ä»¶
	 * 
	 * @param fileNameæ–‡ä»¶è·¯å¾„å?Šå??ç§°
	 *            å¦‚c:/test.txt
	 */
	public void delFile(String fileName) {
		File myDelFile = new File(fileName);
		myDelFile.delete();
	}

	/**
	 * åˆ é™¤æ–‡ä»¶å¤¹
	 * 
	 * @param filePathAndName
	 *            æ–‡ä»¶å¤¹è·¯å¾„å?Šå??ç§° å¦‚c:/fqf
	 */
	public void delFolder(String folderPath) {
		delAllFile(folderPath); // åˆ é™¤å®Œé‡Œé?¢æ‰€æœ‰å†…å®¹
		File myFilePath = new File(folderPath);
		myFilePath.delete(); // åˆ é™¤ç©ºæ–‡ä»¶å¤¹
	}

	/**
	 * åˆ é™¤æ–‡ä»¶å¤¹é‡Œé?¢çš„æ‰€æœ‰æ–‡ä»¶
	 * 
	 * @param folderPath
	 *            æ–‡ä»¶å¤¹è·¯å¾„ å¦‚ c:/abc
	 */
	public void delAllFile(String folderPath) {
		File file = new File(folderPath);
		if (!file.exists()) {
			return;
		}
		if (!file.isDirectory()) {
			return;
		}
		String[] tempList = file.list();
		File temp = null;
		for (int i = 0; i < tempList.length; i++) {
			if (folderPath.endsWith(File.separator)) {
				temp = new File(folderPath + tempList[i]);
			} else {
				temp = new File(folderPath + File.separator + tempList[i]);
			}
			if (temp.isFile()) {
				temp.delete();
			}
			if (temp.isDirectory()) {
				delAllFile(folderPath + "/" + tempList[i]);// å…ˆåˆ é™¤æ–‡ä»¶å¤¹é‡Œé?¢çš„æ–‡ä»¶
				delFolder(folderPath + "/" + tempList[i]);// å†?åˆ é™¤ç©ºæ–‡ä»¶å¤¹
			}
		}
	}

	/**
	 * å¤?åˆ¶å?•ä¸ªæ–‡ä»¶
	 * 
	 * @param oldPath
	 *            åŽŸæ–‡ä»¶è·¯å¾„ å¦‚ï¼šC:/test.txt
	 * @param newPath
	 *            å¤?åˆ¶å?Žè·¯å¾„ å¦‚ï¼šD:/test.txt
	 * @throws Exception
	 */
	public void copyFile(String oldPath, String newPath) throws Exception {
		int byteRead = 0;
		File oldfile = new File(oldPath);
		if (oldfile.exists()) { // æ–‡ä»¶å­˜åœ¨æ—¶
			InputStream inStream = new FileInputStream(oldPath); // è¯»å…¥åŽŸæ–‡ä»¶
			FileOutputStream fs = new FileOutputStream(newPath);
			byte[] buffer = new byte[1024];
			while ((byteRead = inStream.read(buffer)) != -1) {
				fs.write(buffer, 0, byteRead);
			}
			fs.flush();
			fs.close();
			inStream.close();
		}
	}

	/**
	 * å¤?åˆ¶æ•´ä¸ªæ–‡ä»¶å¤¹å†…å®¹
	 * 
	 * @param oldPath
	 *            åŽŸæ–‡ä»¶è·¯å¾„ å¦‚ï¼šc:/abc
	 * @param newPath
	 *            å¤?åˆ¶å?Žè·¯å¾„ å¦‚ï¼šd:/abc/dd
	 * @throws Exception
	 */
	public void copyFolder(String oldPath, String newPath) throws Exception {
		(new File(newPath)).mkdirs(); // å¦‚æžœæ–‡ä»¶å¤¹ä¸?å­˜åœ¨ åˆ™å»ºç«‹æ–°æ–‡ä»¶å¤¹
		File oFile = new File(oldPath);
		String[] file = oFile.list();
		File temp = null;
		for (int i = 0; i < file.length; i++) {
			if (oldPath.endsWith(File.separator)) {
				temp = new File(oldPath + file[i]);
			} else {
				temp = new File(oldPath + File.separator + file[i]);
			}
			if (temp.isFile()) {
				FileInputStream input = new FileInputStream(temp);
				FileOutputStream output = new FileOutputStream(newPath + "/"
						+ (temp.getName()).toString());
				byte[] b = new byte[1024 * 5];
				int len;
				while ((len = input.read(b)) != -1) {
					output.write(b, 0, len);
				}
				output.flush();
				output.close();
				input.close();
			}
			if (temp.isDirectory()) {// å¦‚æžœæ˜¯å­?æ–‡ä»¶å¤¹
				copyFolder(oldPath + "/" + file[i], newPath + "/" + file[i]);
			}
		}

	}

	/**
	 * ç§»åŠ¨æ–‡ä»¶åˆ°æŒ‡å®šç›®å½•
	 * 
	 * @param oldPath
	 *            å¦‚ï¼šc:/freezq.txt
	 * @param newPath
	 *            å¦‚ï¼šd:/freezq.txt
	 * @throws Exception
	 */
	public void moveFile(String oldPath, String newPath) throws Exception {
		copyFile(oldPath, newPath);
		delFile(oldPath);
	}

	/**
	 * ç§»åŠ¨æ–‡ä»¶å¤¹åˆ°æŒ‡å®šç›®å½•
	 * 
	 * @param oldPath
	 *            å¦‚ï¼šc:/abc
	 * @param newPath
	 *            å¦‚ï¼šd:/abc
	 * @throws Exception
	 */
	public void moveFolder(String oldPath, String newPath) throws Exception {
		copyFolder(oldPath, newPath);
		delFolder(oldPath);
	}

}
