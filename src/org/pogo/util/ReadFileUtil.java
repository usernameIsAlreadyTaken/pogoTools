package org.pogo.util;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileReader;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.RandomAccessFile;
import java.io.Reader;

public class ReadFileUtil {
	/**
	 * ä»¥å­—èŠ‚ä¸ºå?•ä½?è¯»å?–æ–‡ä»¶ï¼Œå¸¸ç”¨äºŽè¯»äºŒè¿›åˆ¶æ–‡ä»¶ï¼Œå¦‚å›¾ç‰‡ã€?å£°éŸ³ã€?å½±åƒ?ç­‰æ–‡ä»¶ã€‚
	 */
	public static void readFileByBytes(String fileName) {
		File file = new File(fileName);
		InputStream in = null;
		try {
			System.out.println("ä»¥å­—èŠ‚ä¸ºå?•ä½?è¯»å?–æ–‡ä»¶å†…å®¹ï¼Œä¸€æ¬¡è¯»ä¸€ä¸ªå­—èŠ‚ï¼š");
			// ä¸€æ¬¡è¯»ä¸€ä¸ªå­—èŠ‚
			in = new FileInputStream(file);
			int tempbyte;
			while ((tempbyte = in.read()) != -1) {
				System.out.write(tempbyte);
			}
			in.close();
		} catch (IOException e) {
			e.printStackTrace();
			return;
		}
		try {
			System.out.println("ä»¥å­—èŠ‚ä¸ºå?•ä½?è¯»å?–æ–‡ä»¶å†…å®¹ï¼Œä¸€æ¬¡è¯»å¤šä¸ªå­—èŠ‚ï¼š");
			// ä¸€æ¬¡è¯»å¤šä¸ªå­—èŠ‚
			byte[] tempbytes = new byte[100];
			int byteread = 0;
			in = new FileInputStream(fileName);
			ReadFileUtil.showAvailableBytes(in);
			// è¯»å…¥å¤šä¸ªå­—èŠ‚åˆ°å­—èŠ‚æ•°ç»„ä¸­ï¼Œbytereadä¸ºä¸€æ¬¡è¯»å…¥çš„å­—èŠ‚æ•°
			while ((byteread = in.read(tempbytes)) != -1) {
				System.out.write(tempbytes, 0, byteread);
			}
		} catch (Exception e1) {
			e1.printStackTrace();
		} finally {
			if (in != null) {
				try {
					in.close();
				} catch (IOException e1) {
				}
			}
		}
	}

	/**
	 * ä»¥å­—ç¬¦ä¸ºå?•ä½?è¯»å?–æ–‡ä»¶ï¼Œå¸¸ç”¨äºŽè¯»æ–‡æœ¬ï¼Œæ•°å­—ç­‰ç±»åž‹çš„æ–‡ä»¶
	 */
	public static void readFileByChars(String fileName) {
		File file = new File(fileName);
		Reader reader = null;
		try {
			System.out.println("ä»¥å­—ç¬¦ä¸ºå?•ä½?è¯»å?–æ–‡ä»¶å†…å®¹ï¼Œä¸€æ¬¡è¯»ä¸€ä¸ªå­—èŠ‚ï¼š");
			// ä¸€æ¬¡è¯»ä¸€ä¸ªå­—ç¬¦
			reader = new InputStreamReader(new FileInputStream(file));
			int tempchar;
			while ((tempchar = reader.read()) != -1) {
				// å¯¹äºŽwindowsä¸‹ï¼Œ\r\nè¿™ä¸¤ä¸ªå­—ç¬¦åœ¨ä¸€èµ·æ—¶ï¼Œè¡¨ç¤ºä¸€ä¸ªæ?¢è¡Œã€‚
				// ä½†å¦‚æžœè¿™ä¸¤ä¸ªå­—ç¬¦åˆ†å¼€æ˜¾ç¤ºæ—¶ï¼Œä¼šæ?¢ä¸¤æ¬¡è¡Œã€‚
				// å› æ­¤ï¼Œå±?è”½æŽ‰\rï¼Œæˆ–è€…å±?è”½\nã€‚å?¦åˆ™ï¼Œå°†ä¼šå¤šå‡ºå¾ˆå¤šç©ºè¡Œã€‚
				if (((char) tempchar) != '\r') {
					System.out.print((char) tempchar);
				}
			}
			reader.close();
		} catch (Exception e) {
			e.printStackTrace();
		}
		try {
			System.out.println("ä»¥å­—ç¬¦ä¸ºå?•ä½?è¯»å?–æ–‡ä»¶å†…å®¹ï¼Œä¸€æ¬¡è¯»å¤šä¸ªå­—èŠ‚ï¼š");
			// ä¸€æ¬¡è¯»å¤šä¸ªå­—ç¬¦
			char[] tempchars = new char[30];
			int charread = 0;
			reader = new InputStreamReader(new FileInputStream(fileName));
			// è¯»å…¥å¤šä¸ªå­—ç¬¦åˆ°å­—ç¬¦æ•°ç»„ä¸­ï¼Œcharreadä¸ºä¸€æ¬¡è¯»å?–å­—ç¬¦æ•°
			while ((charread = reader.read(tempchars)) != -1) {
				// å?Œæ ·å±?è”½æŽ‰\rä¸?æ˜¾ç¤º
				if ((charread == tempchars.length)
						&& (tempchars[tempchars.length - 1] != '\r')) {
					System.out.print(tempchars);
				} else {
					for (int i = 0; i < charread; i++) {
						if (tempchars[i] == '\r') {
							continue;
						} else {
							System.out.print(tempchars[i]);
						}
					}
				}
			}

		} catch (Exception e1) {
			e1.printStackTrace();
		} finally {
			if (reader != null) {
				try {
					reader.close();
				} catch (IOException e1) {
				}
			}
		}
	}

	/**
	 * ä»¥è¡Œä¸ºå?•ä½?è¯»å?–æ–‡ä»¶ï¼Œå¸¸ç”¨äºŽè¯»é?¢å?‘è¡Œçš„æ ¼å¼?åŒ–æ–‡ä»¶
	 */
	public static void readFileByLines(String fileName) {
		File file = new File(fileName);
		BufferedReader reader = null;
		try {
			System.out.println("ä»¥è¡Œä¸ºå?•ä½?è¯»å?–æ–‡ä»¶å†…å®¹ï¼Œä¸€æ¬¡è¯»ä¸€æ•´è¡Œï¼š");
			reader = new BufferedReader(new FileReader(file));
			String tempString = null;
			int line = 1;
			// ä¸€æ¬¡è¯»å…¥ä¸€è¡Œï¼Œç›´åˆ°è¯»å…¥nullä¸ºæ–‡ä»¶ç»“æ?Ÿ
			while ((tempString = reader.readLine()) != null) {
				// æ˜¾ç¤ºè¡Œå?·
				System.out.println("line " + line + ": " + tempString);
				line++;
			}
			reader.close();
		} catch (IOException e) {
			e.printStackTrace();
		} finally {
			if (reader != null) {
				try {
					reader.close();
				} catch (IOException e1) {
				}
			}
		}
	}

	/**
	 * éš?æœºè¯»å?–æ–‡ä»¶å†…å®¹
	 */
	public static void readFileByRandomAccess(String fileName) {
		RandomAccessFile randomFile = null;
		try {
			System.out.println("éš?æœºè¯»å?–ä¸€æ®µæ–‡ä»¶å†…å®¹ï¼š");
			// æ‰“å¼€ä¸€ä¸ªéš?æœºè®¿é—®æ–‡ä»¶æµ?ï¼ŒæŒ‰å?ªè¯»æ–¹å¼?
			randomFile = new RandomAccessFile(fileName, "r");
			// æ–‡ä»¶é•¿åº¦ï¼Œå­—èŠ‚æ•°
			long fileLength = randomFile.length();
			// è¯»æ–‡ä»¶çš„èµ·å§‹ä½?ç½®
			int beginIndex = (fileLength > 4) ? 4 : 0;
			// å°†è¯»æ–‡ä»¶çš„å¼€å§‹ä½?ç½®ç§»åˆ°beginIndexä½?ç½®ã€‚
			randomFile.seek(beginIndex);
			byte[] bytes = new byte[10];
			int byteread = 0;
			// ä¸€æ¬¡è¯»10ä¸ªå­—èŠ‚ï¼Œå¦‚æžœæ–‡ä»¶å†…å®¹ä¸?è¶³10ä¸ªå­—èŠ‚ï¼Œåˆ™è¯»å‰©ä¸‹çš„å­—èŠ‚ã€‚
			// å°†ä¸€æ¬¡è¯»å?–çš„å­—èŠ‚æ•°èµ‹ç»™byteread
			while ((byteread = randomFile.read(bytes)) != -1) {
				System.out.write(bytes, 0, byteread);
			}
		} catch (IOException e) {
			e.printStackTrace();
		} finally {
			if (randomFile != null) {
				try {
					randomFile.close();
				} catch (IOException e1) {
				}
			}
		}
	}

	/**
	 * æ˜¾ç¤ºè¾“å…¥æµ?ä¸­è¿˜å‰©çš„å­—èŠ‚æ•°
	 */
	private static void showAvailableBytes(InputStream in) {
		try {
			System.out.println("å½“å‰?å­—èŠ‚è¾“å…¥æµ?ä¸­çš„å­—èŠ‚æ•°ä¸º:" + in.available());
		} catch (IOException e) {
			e.printStackTrace();
		}
	}

	public static void main(String[] args) {
		String fileName = "C:/temp/newTemp.txt";
		ReadFileUtil.readFileByBytes(fileName);
		ReadFileUtil.readFileByChars(fileName);
		ReadFileUtil.readFileByLines(fileName);
		ReadFileUtil.readFileByRandomAccess(fileName);
	}
}
