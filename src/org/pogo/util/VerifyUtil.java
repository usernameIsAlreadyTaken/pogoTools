package org.pogo.util;

import java.util.regex.Matcher;
import java.util.regex.Pattern;

/**
 * @author ZhouJun
 *	æ¥ å²ƒç˜‰å®¸ãƒ¥å?¿ç»«ï¿½
 */
public class VerifyUtil {

	public VerifyUtil() {
	}

	// -----------------ç”¯æ??å™ºç€¹æ°«ç®Ÿ---------------------//
	/**
	 * Emailå§?ï½…åž¯ç?›ã„¨æ?ªå¯®ï¿½^\w+([-+.]\w+)*@\w+([-.]\w+)*\.\w+([-.]\w+)*$
	 */
	public static final String EMAIL = "^\\w+([-+.]\\w+)*@\\w+([-.]\\w+)*\\.\\w+([-.]\\w+)*$";

	/**
	 * é?¢ä½ƒç˜½é?™é£Žçˆœå§?ï½…åž¯ç?›ã„¨æ?ªå¯®ï¿½
	 * (^(\d{2,4}[-_é”›å¶?ï¿½]?)?\d{3,8}([-_é”›å¶?ï¿½]?\d{3,8})?([-_é”›å¶?ï¿½]?\d{1,7})?$)|
	 * (^0?1[35]\d{9}$)
	 */
	public static final String PHONE = "(^(\\d{2,4}[-_é”›å¶?ï¿½]?)?\\d{3,8}([-_é”›å¶?ï¿½]?\\d{3,8})?([-_é”›å¶?ï¿½]?\\d{1,7})?$)|(^0?1[35]\\d{9}$)";

	/**
	 * éŽµå¬«æº€é?™é£Žçˆœå§?ï½…åž¯ç?›ã„¨æ?ªå¯®ï¿½^(13[0-9]|15[0|3|6|7|8|9]|18[8|9])\d{8}$
	 */
	public static final String MOBILE = "^(13[0-9]|15[0|3|6|7|8|9]|18[8|9])\\d{8}$";

	/**
	 * IPé?¦æ?¿æ½ƒå§?ï½…åž¯ç?›ã„¨æ?ªå¯®ï¿½
	 * ((?:(?:25[0-5]|2[0-4]\\d|[01]?\\d?\\d)\\.){3}(?:25[0-5]|2[0-4]\\
	 * d|[01]?\\d?\\d))
	 */
	public static final String IPADDRESS = "((?:(?:25[0-5]|2[0-4]\\d|[01]?\\d?\\d)\\.){3}(?:25[0-5]|2[0-4]\\d|[01]?\\d?\\d))";

	/**
	 * Integerå§?ï½…åž¯ç?›ã„¨æ?ªå¯®ï¿½^-?(([1-9]\d*$)|0)
	 */
	public static final String INTEGER = "^-?(([1-9]\\d*$)|0)";

	/**
	 * å§?ï½†æš£é??ç‰ˆî„œé?’æ¬’ã€ƒæ?ˆæƒ§ç´¡ >=0 ^[1-9]\d*|0$
	 */
	public static final String INTEGER_NEGATIVE = "^[1-9]\\d*|0$";

	/**
	 * ç’?ç†¸æš£é??ç‰ˆî„œé?’æ¬’ã€ƒæ?ˆæƒ§ç´¡ <=0 ^-[1-9]\d*|0$
	 */
	public static final String INTEGER_POSITIVE = "^-[1-9]\\d*|0$";

	/**
	 * Doubleå§?ï½…åž¯ç?›ã„¨æ?ªå¯®ï¿½^-?([1-9]\d*\.\d*|0\.\d*[1-9]\d*|0?\.0+|0)$
	 */
	public static final String DOUBLE = "^-?([1-9]\\d*\\.\\d*|0\\.\\d*[1-9]\\d*|0?\\.0+|0)$";

	/**
	 * å§?î––oubleå§?ï½…åž¯ç?›ã„¨æ?ªå¯®ï¿½>=0 ^[1-9]\d*\.\d*|0\.\d*[1-9]\d*|0?\.0+|0$éŠ†ï¿½
	 */
	public static final String DOUBLE_NEGATIVE = "^[1-9]\\d*\\.\\d*|0\\.\\d*[1-9]\\d*|0?\\.0+|0$";

	/**
	 * ç’?çƒ¡oubleå§?ï½…åž¯ç?›ã„¨æ?ªå¯®ï¿½<= 0 ^(-([1-9]\d*\.\d*|0\.\d*[1-9]\d*))|0?\.0+|0$
	 */
	public static final String DOUBLE_POSITIVE = "^(-([1-9]\\d*\\.\\d*|0\\.\\d*[1-9]\\d*))|0?\\.0+|0$";

	/**
	 * éªžæ’®ç·žå§?ï½…åž¯ç?›ã„¨æ?ªå¯®ï¿½^(?:[1-9][0-9]?|1[01][0-9]|120)$ é?–å½’åŽ¤0-120å®€ï¿½
	 */
	public static final String AGE = "^(?:[1-9][0-9]?|1[01][0-9]|120)$";

	/**
	 * é–­î†¾ç´ªå§?ï½…åž¯ç?›ã„¨æ?ªå¯®ï¿½[1-9]\d{5}(?!\d) é?¥è—‰å”´6æµ£å¶‰å?–ç¼‚ï¿½
	 */
	public static final String CODE = "[1-9]\\d{5}(?!\\d)";

	/**
	 * é?–å½’åŽ¤é?¢è¾¨æšŸç€›æ¤¼ï¿½26æ¶“î?‡å«³é?‚å›§ç“§å§£å¶†åž¨é‘°å‘¬ç¬…é?’æŽ”åšŽç¼?å‹¬åžšé?¨å‹«ç“§ç»—ï¸¿è¦† ^\w+$
	 */
	public static final String STR_ENG_NUM_ = "^\\w+$";

	/**
	 * é?–å½’åŽ¤é?¢è¾¨æšŸç€›æ¥€æ‹°26æ¶“î?‡å«³é?‚å›§ç“§å§£å¶‡ç²?éŽ´æ„®æ®‘ç€›æ¥ƒîƒ?æ¶“ï¿½^[A-Za-z0-9]+$
	 */
	public static final String STR_ENG_NUM = "^\\w+$";

	/**
	 * é?–å½’åŽ¤é?¢ï¿½6æ¶“î?‡å«³é?‚å›§ç“§å§£å¶‡ç²?éŽ´æ„®æ®‘ç€›æ¥ƒîƒ?æ¶“ï¿½^[A-Za-z]+$
	 */
	public static final String STR_ENG = "^[A-Za-z]+$";

	/**
	 * é?–å½’åŽ¤æ¶“î…Ÿæžƒç€›æ¥ƒîƒ? ^[\u0391-\uFFE5]+$
	 */
	public static final String STR_CHINA = "^[\u0391-\uFFE5]+$";

	/**
	 * æ?©å›¨æŠ¤é?—è§„ç•©ç€›æ¥ƒîƒ?æ¶“å?‰î„œé?’ï¿½regEx=
	 * "[`~!@#$%^&*()+=|{}':;',\\[\\].<>/?~é”›ä¸‚#é”Ÿï¿½éˆ¥ï¸¹ï¿½&*é”›å ¬ç´šéˆ¥æ–ºï¿½+|{}éŠ†æ„©ï¿½éˆ¥æ©ˆç´±é”›æ°£ï¿½éˆ¥æº¾ï¿½éŠ†å‚¦ç´?éŠ†ä¾Šç´µ]";
	 */
	public static final String STR_SPECIAL = "[`~!@#$%^&*()+=|{}':;',\\[\\].<>/?~é”›ä¸‚#é”Ÿï¿½éˆ¥ï¸¹ï¿½&*é”›å ¬ç´šéˆ¥æ–ºï¿½+|{}éŠ†æ„©ï¿½éˆ¥æ©ˆç´±é”›æ°£ï¿½éˆ¥æº¾ï¿½éŠ†å‚¦ç´?éŠ†ä¾Šç´µ]";

	/**
	 * é?™î?‡å…˜æ?ˆæ’¹å«³é?‚ï¿½é??æ?¿ç“§ æ¶“î…Ÿæžƒ ^[a-zA-Z0-9\u4e00-\u9fa5]+$
	 */
	public static final String STR_ENG_CHA_NUM = "^[a-zA-Z0-9\u4e00-\u9fa5]+$";

	/***
	 * é?ƒãƒ¦æ¹¡å§?ï½…åž¯ é?€îˆ›å¯”é”›ï¿½YYYY-MM-DD YYYY/MM/DD YYYY_MM_DD YYYYMMDD YYYY.MM.DDé?¨å‹«èˆ°å¯®ï¿½
	 */
	public static final String DATE_ALL = "((^((1[8-9]\\d{2})|([2-9]\\d{3}))([-\\/\\._]?)(10|12|0?[13578])([-\\/\\._]?)(3[01]|[12][0-9]|0?[1-9])$)"
			+ "|(^((1[8-9]\\d{2})|([2-9]\\d{3}))([-\\/\\._]?)(11|0?[469])([-\\/\\._]?)(30|[12][0-9]|0?[1-9])$)"
			+ "|(^((1[8-9]\\d{2})|([2-9]\\d{3}))([-\\/\\._]?)(0?2)([-\\/\\._]?)(2[0-8]|1[0-9]|0?[1-9])$)|(^([2468][048]00)([-\\/\\._]?)(0?2)([-\\/\\._]?)(29)$)|(^([3579][26]00)"
			+ "([-\\/\\._]?)(0?2)([-\\/\\._]?)(29)$)"
			+ "|(^([1][89][0][48])([-\\/\\._]?)(0?2)([-\\/\\._]?)(29)$)|(^([2-9][0-9][0][48])([-\\/\\._]?)"
			+ "(0?2)([-\\/\\._]?)(29)$)"
			+ "|(^([1][89][2468][048])([-\\/\\._]?)(0?2)([-\\/\\._]?)(29)$)|(^([2-9][0-9][2468][048])([-\\/\\._]?)(0?2)"
			+ "([-\\/\\._]?)(29)$)|(^([1][89][13579][26])([-\\/\\._]?)(0?2)([-\\/\\._]?)(29)$)|"
			+ "(^([2-9][0-9][13579][26])([-\\/\\._]?)(0?2)([-\\/\\._]?)(29)$))";
	/***
	 * é?ƒãƒ¦æ¹¡å§?ï½…åž¯ é?€îˆ›å¯”é”›ï¿½YYYY-MM-DD
	 */
	public static final String DATE_FORMAT1 = "(([0-9]{3}[1-9]|[0-9]{2}[1-9][0-9]{1}|[0-9]{1}[1-9][0-9]{2}|[1-9][0-9]{3})-(((0[13578]|1[02])-(0[1-9]|[12][0-9]|3[01]))|((0[469]|11)-(0[1-9]|[12][0-9]|30))|(02-(0[1-9]|[1][0-9]|2[0-8]))))|((([0-9]{2})(0[48]|[2468][048]|[13579][26])|((0[48]|[2468][048]|[3579][26])00))-02-29)";

	// 1.æ¥ å²ƒç˜‰é?ƒãƒ¦æ¹¡é?¨å‹¬î„œé?’æ¬’ã€ƒæ?ˆæƒ§ç´¡é?”çŠ²å?†é—‚æ?¿å‹¾é?¨å‹«åž½é?‚î…?äº’é?™å©ƒï¿½ç’ºîˆšåžŽé?‹ï¿½
	//
	// æ?©æ¶˜å?†å§?ï½‰î•½æ¶”å¬ªå¢ é”›å±¾åžœæµ î„„æ¸¶ç‘•ä½¹ç·žå¨“å‘¬è¢±æ¶“î?…îœ†è¹‡ç¢‰ç´°
	//
	// æ¶“ï¿½ç´?æµ ï¿½ç®žé?„îˆšæ‚Žå¨‰æ› æ®‘é?ƒãƒ¦æ¹¡é‘¼å†¨æ´¿é”›ç†·î‡®æµœåº?ç¬‰é?šå²€æ®‘æ?´æ—‚æ•¤é?¦çƒ˜æ«™é”›å²ƒç¹–æ¶“î?ˆæ£¶æ£°æ¨»æ¹?æ¶“å¶…æ‚“é?¨å‹®Ð’é–²å¨¿ï¿½æ?©æ¬“å™·é–²å›©æ’¼MSDNæ¶“î… æ®‘ç»¾ï¹€ç•¾é”›ï¿½
	//
	// DateTime é?Šè‚©è¢«é?¨å¬­ã€ƒç»€å“„ï¿½é‘¼å†¨æ´¿é?¦ã„¥å?•é??å†¿ç´™é?©è™¹æ½±ç»¾î?„åŽ“é”›ï¿½001 éªžï¿½1 é?ˆï¿½1 é?ƒãƒ¥å´?æ¾¶ï¿½12:00:00 é?’æ?¿å?•é??ï¿½(C.E.) 9999 éªžï¿½12
	// é?ˆï¿½31 é?ƒãƒ¦æ«„æ¶“ï¿½11:59:59 æ¶”å¬®æ£¿é?¨å‹¬æ£©é?ˆç†·æ‹°é?ƒå •æ£¿éŠ†ï¿½
	//
	// æµœå²‹ç´?é??å……ç°¬é—‚æ?¿å‹¾é?¨å‹¯æ§“é–²å¨¿ï¿½æµœçƒ˜çš¯é??æ¬’å?›é?‘è™¹å¢—ç»€æƒ§çš¬ç€›ï¸½æšŸç€›ï¹€î…»é?¨å‹®Ð’é–²å©ƒç¥¬é?„åº¢æ§—éŽ³å‚¦ç´™mediawikiç»›å¤?å…˜å¨ŒÂ¤î‡©é?„åº?è´Ÿæµ ï¿½ç®žé??å¯¸æ«¨éªžç¿ å”¤è¹‡å‘´ã€?é?„ï¿½00é?¨å‹«ï¿½é??ç‰ˆæ¤‚éŽµå¶†æ§¸é—‚æ?¿å‹¾é”›å¤›ç´°
	//
	// é??å……ç°¬é??î„€å·»é—‚æ?¿å‹¾é?„îˆ?ç¹–é??ç–¯îžƒç€¹æ°±æ®‘é”›æ°¬æ¹´é?žå†ªç²«æ¾¶î?ˆæ§¼é??î„ƒæµ†æ¶“ï¿½æ‡†é?™î‚¢ä»›æ¶“ï¿½æ´–è¤°æŽ‘å‹¾é”›å±¼ç«´é?¥ç‚²ç¶Šéªžæ’®æš±365é?ƒï¿½é?ƒï¿½8é?’ï¿½
	// 46ç»‰æŽ‹ï¿½é?¥çŠ³î„?é”›å±½å?•é?˜å—šîžƒç€¹æ°­æ¹?éªžå†²å‹¾é?œå²„æ£¸éªžè¾¾ç´?éªžå†²å‹¾æ¶“ï¿½å‹¾é?ˆï¿½65é?ƒãƒ¯ç´?å§£æ–¿æ´–è¤°æŽ‘å‹¾é?­ï¿½.2422é?ƒãƒ¯ç´?é?¥æ¶˜å‹¾é??è¾©ç…­0.9688é?ƒãƒ¯ç´?é??å‘®ç˜¡é?¥æ¶˜å‹¾æ¾§ç‚²å§žæ¶“ï¿½æ£©é”›å²ƒç¹–æ¶“ï¿½å‹¾é?ˆï¿½66é?ƒãƒ¯ç´?ç??è¾¨æ§¸é—‚æ?¿å‹¾éŠ†å‚™çµ¾é?¥æ¶˜å‹¾æ¾§ç‚²å§žæ¶“ï¿½æ£©å§£æ–¿æ´“æ¶“î?„æ´–è¤°æŽ‘å‹¾é?™å ?î™‹0.0312é?ƒï¿½400éªžæ?‘æ‚—ç??å——î™‹3.12é?ƒï¿½é??å‘­æ¹ª400éªžç¿ è…‘ç??æˆ£î†•3æ¶“î?ˆæ£¸éªžï¿½æ¶”ç†·æ°¨é?„îˆšæ¹ª400éªžç¿ è…‘é?™î?‡î†•97æ¶“î?ˆæ£¸éªžè¾¾ç´?æ?©æ¬?ç‰±é??î„€å·»éªžå¯¸æ®‘éªžå†²æ½Žé—€åž®å®³æ¶“åº¡æ´–è¤°æŽ‘å‹¾ç??è¾©æµ‰æ?©æˆœæŠ€æµœå—?ï¿½é?¢è¾¨î„?ç‘™å‹«ç•¾é”›æ°¬å‹¾æµ èŠ¥æ§¸é??å¯¸æ«¨é??æ‰®æ®‘è¹‡å‘´ã€?é?„ï¿½00é?¨å‹«ï¿½é??ç‰ˆå¢ é?„îˆžæ£¸éªžè¾¾ç´?æ¸šå¬ªîœ†1900éªžæ·¬ï¿½2100éªžæ?‘æ°¨æ¶“å¶†æ§¸é—‚æ?¿å‹¾éŠ†ï¿½
	//
	// å¨“å‘®îš¶æµœå—•äº’æ¶“å©?è¢±æ¶“î?…îœ†è¹‡ç¢‰ç´?éŽ´æˆœæ»‘æ?©æ¶˜å?†å§?ï½‰î•½éŠ†ï¿½
	// æ££æ §åŽ›é—‡ï¿½îœ…æ¥ å²ƒç˜‰éªžç¿ å”¤é”›å±¾æ¨‰é?’è®¹ç´?éªžç¿ å”¤é‘¼å†¨æ´¿æ¶“ï¿½0001 - 9999é”›å±½å°®é–°å³?YYYé?¨å‹¬î„œé?’æ¬’ã€ƒæ?ˆæƒ§ç´¡æ¶“çŒ´ç´°
	//
	// [0-9]{3}[1-9]|[0-9]{2}[1-9][0-9]{1}|[0-9]{1}[1-9][0-9]{2}|[1-9][0-9]{3}
	//
	// é??æœµè…‘ [0-9] æ¶”ç†·å½²æµ ãƒ¨ã€ƒç»€è½°è´Ÿ \dé”›å±¼çµ¾ \d æ¶“å¶…îœ† [0-9] é?©ç£‹îž?é”›å±½æ´œå§?ã‚„ç¬…é—ˆãˆ¡åžœç??å—•ç«´é?©æ’®å™°é?¢ï¿½[0-9]
	//
	// é?¢ã„¦î„œé?’æ¬’ã€ƒæ?ˆæƒ§ç´¡æ¥ å²ƒç˜‰é?ƒãƒ¦æ¹¡é?¨å‹¯æ¯¦é??è§„æ¹?æµœå²‹ç´°æ¶“ï¿½æ§¸æ¾¶Ñƒçš¬é?ˆå œå”¤é?¨å‹«ã?‰é??é¢?ç¬‰é?šå²‹ç´?æµœå±¾æ§¸é—‚æ?¿å‹¾é?¨å‹®ï¿½é“?æˆ™ï¿½
	// ç€µé€›ç°¬ç»—îƒ¿ç«´æ¶“î?ˆæ¯¦é??ç™¸ç´?éŽ´æˆœæ»‘æ££æ §åŽ›æ¶“å¶ˆï¿½é“?æˆ¦æ£¸éªžè¾¾ç´?é?‹å›ªî†•2é?ˆå œå”¤é–®èŠ¥æ§¸28æ¾¶â•‹ç´?æ?©æ¬?ç‰±é”›å±¾æ¹€æµ è—‰æ‹°é?ƒãƒ¦æ¹¡é?™îˆ™äº’é?’å—˜åžšæ¶“å¤ŒîžŒéŽ¯å‘­å–Œé”›ï¿½
	//
	// 1éŠ†ä½¹æ¹€æµ æˆ’è´Ÿ 1, 3, 5, 7, 8, 10, 12é”›å±½ã?‰é??æ‹Œå¯–é?¥ç¿ è´Ÿ 01 - 31é”›å±½å°®é–°å³‚M-DDé?¨å‹¬î„œé?’æ¬’ã€ƒæ?ˆæƒ§ç´¡æ¶“çŒ´ç´°
	//
	// (0[13578]|1[02])-(0[1-9]|[12][0-9]|3[01])
	//
	// 2éŠ†ä½¹æ¹€æµ æˆ’è´Ÿ 4, 6, 9, 11é”›å±½ã?‰é??æ‹Œå¯–é?¥ç¿ è´Ÿ 01-30é”›å±½å°®é–°å³‚M-DDé?¨å‹¬î„œé?’æ¬’ã€ƒæ?ˆæƒ§ç´¡æ¶“çŒ´ç´°
	//
	// (0[469]|11)-(0[1-9]|[12][0-9]|30)
	//
	// 3éŠ†ä½¹æ¹€æµ æˆ’è´Ÿ 2é”›å²ƒï¿½é“?æˆ?é’©éªžå­˜å„?é??ç¢‰ç´?é?–å½’åŽ¤MM-DDé?¨å‹¬î„œé?’æ¬’ã€ƒæ?ˆæƒ§ç´¡æ¶“çŒ´ç´°
	//
	// 02-(0[1-9]|[1][0-9]|2[0-8])
	//
	// é??è§„åµ?æ¶“å©‡æ½°é?¨å‹¬åžšé?‹æ»?ç´?éŽ´æˆœæ»‘é?™îˆ™äº’å¯°æ¥€åŸŒé?–å½’åŽ¤éªžå†²å‹¾é?ƒãƒ¦æ¹¡é??ç…Žç´¡æ¶“ç¯©YYY-MM-DDé?¨å‹¬î„œé?’æ¬’ã€ƒæ?ˆæƒ§ç´¡é”›ï¿½
	//
	// ([0-9]{3}[1-9]|[0-9]{2}[1-9][0-9]{1}|[0-9]{1}[1-9][0-9]{2}|[1-9][0-9]{3})-(((0[13578]|1[02])-(0[1-9]|[12][0-9]|3[01]))|((0[469]|11)-(0[1-9]|[12][0-9]|30))|(02-(0[1-9]|[1][0-9]|2[0-8])))
	//
	// éŽºãƒ§æ½ƒéŽ´æˆœæ»‘é?‰ãƒ¨Ð’é??å´‡îƒ‡æµœå±¼é‡œé—…å‰§å?£é”›æ°¶æ£¸éªžå¯¸æ®‘é‘°å†­æª»éŠ†å‚›ç‰´éŽ¹î‡€æ£¸éªžå¯¸æ®‘ç€¹æ°«ç®Ÿé”›å±¾åžœæµ î„€å½²æµ ãƒ¥çš¢é—‚æ?¿å‹¾é?’å—•è´Ÿæ¶“ã‚‡è¢«é”›ï¿½
	//
	// 1éŠ†ä½½å…˜ç?šï¿½é??æ’®æ«Žæµ£å—•ç¬‰é‘³å€Ÿî–†100é??æ’®æ«Žé?¨å‹«å‹¾æµ å§?ï¿½ç€µç»˜å£˜é?šåº?è¢±æµ£å¶‡æ®‘é?™æ¨ºå¯²ç‘™å‹«ç·¥é”›å±½å½²æµ ãƒ¥ç·¢è¹‡î‚¢ç·±é?’é¢?ç¬…é—ˆãˆ¢æ®‘å§?ï½…åž¯é?–å½’åŽ¤é”›ï¿½
	//
	// ([0-9]{2})(0[48]|[2468][048]|[13579][26])
	//
	// 2éŠ†ä½½å…˜ç?šï¿½00é??æ’®æ«Žé?¨å‹«å‹¾æµ å§?ï¿½é‘³å€Ÿî–†400é??æ’®æ«Žé?¨å‹¬æšŸé‘²îˆšç•¾é‘³å€Ÿî–†100é??æ’®æ«Žé”›å±½æ´œå§?ã‚…æ‚—æ¶“ã‚„ç¶…é‘²îˆšç•¾é?„ï¿½0é”›å±¾åžœæµ î„€å½§ç‘•ä½·ç¹šç’‡ä½¸å¢ æ¶“ã‚„ç¶…é‘³å€Ÿî–†4é??æ’®æ«Žé?—å†²å½²é”›å²€æµ‰æ?´æ—‚æ®‘å§?ï½…åž¯ç?›ã„¨æ?ªå¯®å¿Žè´Ÿé”›ï¿½
	//
	// (0[48]|[2468][048]|[3579][26])00
	//
	// 2.é?ˆï¿½å·±æ¥ å²ƒç˜‰é?ƒãƒ¦æ¹¡é?¨å‹¬î„œé?’æ¬’ã€ƒæ?ˆæƒ§ç´¡,å¨£è¯²å§žæµœå—›æ£¸éªžå¯¸æ®‘æ¥ å²ƒç˜‰
	//
	// æ?©æ¬Žé‡œé?ƒãƒ¦æ¹¡å§?ï½…åž¯ç?›ã„¨æ?ªå¯®å¿”æ•®éŽ¸ï¿½
	// YYYY-MM-DD
	// YYYY/MM/DD
	// YYYY_MM_DD
	// YYYY.MM.DDé?¨å‹«èˆ°å¯®ï¿½
	//
	// match : 2008-2-29 2008/02/29
	//
	// not match : 2008-2-30 2007-2-29
	//
	// ç€¹å±¾æš£é?¨å‹¬î„œé?’æ¬’ã€ƒæ?ˆæƒ§ç´¡æ¿¡å‚™ç¬…:
	// ((^((1[8-9]\d{2})|([2-9]\d{3}))([-\/\._])(10|12|0?[13578])([-\/\._])(3[01]|[12][0-9]|0?[1-9])$)|(^((1[8-9]\d{2})|([2-9]\d{3}))([-\/\._])(11|0?[469])([-\/\._])(30|[12][0-9]|0?[1-9])$)|(^((1[8-9]\d{2})|([2-9]\d{3}))([-\/\._])(0?2)([-\/\._])(2[0-8]|1[0-9]|0?[1-9])$)|(^([2468][048]00)([-\/\._])(0?2)([-\/\._])(29)$)|(^([3579][26]00)([-\/\._])(0?2)([-\/\._])(29)$)|(^([1][89][0][48])([-\/\._])(0?2)([-\/\._])(29)$)|(^([2-9][0-9][0][48])([-\/\._])(0?2)([-\/\._])(29)$)|(^([1][89][2468][048])([-\/\._])(0?2)([-\/\._])(29)$)|(^([2-9][0-9][2468][048])([-\/\._])(0?2)([-\/\._])(29)$)|(^([1][89][13579][26])([-\/\._])(0?2)([-\/\._])(29)$)|(^([2-9][0-9][13579][26])([-\/\._])(0?2)([-\/\._])(29)$))
	// é—‚æ?¿å‹¾é?¨ï¿½é?ˆå œå”¤é?ˆï¿½9æ¾¶â•‹ç´?é?¥çŠ³î„?é?–å½’åŽ¤é—‚æ?¿å‹¾é?ƒãƒ¦æ¹¡é??ç…Žç´¡æ¶“ç¯©YYY-MM-DDé?¨å‹¬î„œé?’æ¬’ã€ƒæ?ˆæƒ§ç´¡æ¶“çŒ´ç´°
	//
	// (([0-9]{2})(0[48]|[2468][048]|[13579][26])|((0[48]|[2468][048]|[3579][26])00))-02-29
	//
	// é?ˆï¿½æ‚—é”›å±½çš¢éªžå†²å‹¾é?œå²„æ£¸éªžå¯¸æ®‘é?ƒãƒ¦æ¹¡æ¥ å²ƒç˜‰ç?›ã„¨æ?ªå¯®å¿“æ‚Žéªžè®¹ç´?éŽ´æˆœæ»‘å¯°æ¥€åŸŒé?ˆï¿½ç²“é?¨å‹¯ç?™ç’‡ä½¹æ£©é?ˆç†¸ç‰¸å¯®å¿Žè´ŸYYYY-MM-DDé?¨å‹¬î„œé?’æ¬’ã€ƒæ?ˆæƒ§ç´¡æ¶“çŒ´ç´°
	//
	// (([0-9]{3}[1-9]|[0-9]{2}[1-9][0-9]{1}|[0-9]{1}[1-9][0-9]{2}|[1-9][0-9]{3})-(((0[13578]|1[02])-(0[1-9]|[12][0-9]|3[01]))|((0[469]|11)-(0[1-9]|[12][0-9]|30))|(02-(0[1-9]|[1][0-9]|2[0-8]))))|((([0-9]{2})(0[48]|[2468][048]|[13579][26])|((0[48]|[2468][048]|[3579][26])00))-02-29)
	//
	// DD/MM/YYYYé??ç…Žç´¡é?¨å‹¬î„œé?’æ¬“ç?™ç’‡ä½½ã€ƒæ?ˆæƒ§ç´¡æ¶“çŒ´ç´°
	//
	// (((0[1-9]|[12][0-9]|3[01])/((0[13578]|1[02]))|((0[1-9]|[12][0-9]|30)/(0[469]|11))|(0[1-9]|[1][0-9]|2[0-8])/(02))/([0-9]{3}[1-9]|[0-9]{2}[1-9][0-9]{1}|[0-9]{1}[1-9][0-9]{2}|[1-9][0-9]{3}))|(29/02/(([0-9]{2})(0[48]|[2468][048]|[13579][26])|((0[48]|[2468][048]|[3579][26])00)))

	/**
	 * URLå§?ï½…åž¯ç?›ã„¨æ?ªå¯®ï¿½é?–å½’åŽ¤ http www ftp
	 */
	public static final String URL = "^(http|www|ftp|)?(://)?(\\w+(-\\w+)*)(\\.(\\w+(-\\w+)*))*((:\\d+)?)(/(\\w+(-\\w+)*))*(\\.?(\\w)*)(\\?)?"
			+ "(((\\w*%)*(\\w*\\?)*(\\w*:)*(\\w*\\+)*(\\w*\\.)*(\\w*&)*(\\w*-)*(\\w*=)*(\\w*%)*(\\w*\\?)*"
			+ "(\\w*:)*(\\w*\\+)*(\\w*\\.)*"
			+ "(\\w*&)*(\\w*-)*(\\w*=)*)*(\\w*)*)$";

	/**
	 * éŸ¬î‚¡å”¤ç’‡ä½¹î„œé?’æ¬’ã€ƒæ?ˆæƒ§ç´¡
	 */
	public static final String IDCARD = "((11|12|13|14|15|21|22|23|31|32|33|34|35|36|37|41|42|43|44|45|46|50|51|52|53|54|61|62|63|64|65)[0-9]{4})"
			+ "(([1|2][0-9]{3}[0|1][0-9][0-3][0-9][0-9]{3}"
			+ "[Xx0-9])|([0-9]{2}[0|1][0-9][0-3][0-9][0-9]{3}))";

	/**
	 * 1.é?–å½’åŽ¤ç»‰æˆ?î„Ÿç’?â„ƒæšŸ eéŽ´æ ¬ï¿½Eè¹‡å‘´ã€?é?‘è™¹å¹‡é?ˆå¤‰ç¬–é?™î?…æ¹?æ¶“ï¿½î‚¼ æ¶“å¶…æƒˆDd å§?ï½…åž¯
	 * ^[-+]?(\d+(\.\d*)?|\.\d+)([eE]([-+]?([012]
	 * ?\d{1,2}|30[0-7])|-3([01]?[4-9]|[012]?[0-3])))$
	 */
	public final static String SCIENTIFIC_A = "^[-+]?(\\d+(\\.\\d*)?|\\.\\d+)([eE]([-+]?([012]?\\d{1,2}|30[0-7])|-3([01]?[4-9]|[012]?[0-3])))$";

	/**
	 * 2.é?–å½’åŽ¤ç»‰æˆ?î„Ÿç’?â„ƒæšŸ eéŽ´æ ¬ï¿½Eè¹‡å‘´ã€?é?‘è™¹å¹‡é?ˆå¤‰ç¬–é?™î?…æ¹?æ¶“ï¿½î‚¼ ç¼?æ’³ç†¬é?–å‘­æƒˆDd å§?ï½…åž¯
	 * ^[-+]?(\d+(\.\d*)?|\.\d+)([eE]([-+]?([012
	 * ]?\d{1,2}|30[0-7])|-3([01]?[4-9]|[012]?[0-3])))[dD]?$
	 */
	public final static String SCIENTIFIC_B = "^[-+]?(\\d+(\\.\\d*)?|\\.\\d+)([eE]([-+]?([012]?\\d{1,2}|30[0-7])|-3([01]?[4-9]|[012]?[0-3])))[dD]?$";

	/**
	 * 3.é?–å½’åŽ¤ç»‰æˆ?î„Ÿç’?â„ƒæšŸ é?„îˆšæƒ?é?šî‚£æ¹?EéŽ´æ ¬ï¿½eé–®ä»‹ï¿½æ?©ï¿½ç¼?æ’³ç†¬é?šî‚£æ¹?Ddé?¨å‹ªç¯ƒé–«æ°³ç¹ƒé”›å ¥æ‹¡ç€µç¬µoubleç»«è¯²ç€·é”›ï¿½å§?ï½…åž¯
	 * ^[-+]?(\d+(\.\d*)?|\.\d+)([
	 * eE]([-+]?([012]?\d{1,2}|30[0-7])|-3([01]?[4-9]|[012]?[0-3])))?[dD]?$
	 */
	public final static String SCIENTIFIC_C = "^[-+]?(\\d+(\\.\\d*)?|\\.\\d+)([eE]([-+]?([012]?\\d{1,2}|30[0-7])|-3([01]?[4-9]|[012]?[0-3])))?[dD]?$";

	/**
	 * 4.é?–å½’åŽ¤ç»‰æˆ?î„Ÿç’?â„ƒæšŸ é?„îˆšæƒ?é?šî‚£æ¹?EéŽ´æ ¬ï¿½eé–®ä»‹ï¿½æ?©ï¿½ç¼?æ’³ç†¬æ¶“å¶…æƒˆDd å§?ï½…åž¯
	 * ^[-+]?(\d+(\.\d*)?|\.\d+)([eE]([-+]?([012]?
	 * \d{1,2}|30[0-7])|-3([01]?[4-9]|[012]?[0-3])))?$
	 */
	public final static String SCIENTIFIC_D = "^[-+]?(\\d+(\\.\\d*)?|\\.\\d+)([eE]([-+]?([012]?\\d{1,2}|30[0-7])|-3([01]?[4-9]|[012]?[0-3])))?$";

	/**
	 * é?’ã‚†æŸ‡ç€›æ¥?î†Œé?„îˆšæƒ?æ¶“è™¹â”– ç»—ï¹€æ‚Žæ?©æ–¿æ´–ture
	 * 
	 * @param str
	 * @return boolean
	 */
	public static synchronized boolean StrisNull(String str) {
		return null == str || str.trim().length() <= 0 ? true : false;
	}

	/**
	 * é?’ã‚†æŸ‡ç€›æ¥?î†Œé?„îˆžæ½ªç»Œï¿½ç»—ï¹€æ‚Žæ?©æ–¿æ´–ture
	 * 
	 * @param str
	 * @return boolean
	 */
	public static boolean StrNotNull(String str) {
		return !StrisNull(str);
	}

	/**
	 * ç€›æ¥ƒîƒ?æ¶“çž¡ullæ?žî„‚â”–
	 * 
	 * @param str
	 * @return boolean
	 */
	public static String nulltoStr(String str) {
		return StrisNull(str) ? "" : str;
	}

	/**
	 * ç€›æ¥ƒîƒ?æ¶“çž¡ullç’§å¬ªï¿½æ¦›æ¨¿î…»é?Šï¿½
	 * 
	 * @param str
	 *            é?©î†½çˆ£ç€›æ¥ƒîƒ?æ¶“ï¿½
	 * @param defaut
	 *            æ¦›æ¨¿î…»é?Šï¿½
	 * @return String
	 */
	public static String nulltoStr(String str, String defaut) {
		return StrisNull(str) ? defaut : str;
	}

	/**
	 * é?’ã‚†æŸ‡ç€›æ¥?î†Œé?„îˆšæƒ?æ¶“ç¯?mail ç»—ï¹€æ‚Žæ?©æ–¿æ´–ture
	 * 
	 * @param str
	 * @return boolean
	 */
	public static boolean isEmail(String str) {
		return Regular(str, EMAIL);
	}

	/**
	 * é?’ã‚†æŸ‡é?„îˆšæƒ?æ¶“è™¹æ•¸ç’‡æ¿†å½¿é?®ï¿½ç»—ï¹€æ‚Žæ?©æ–¿æ´–ture
	 * 
	 * @param str
	 * @return boolean
	 */
	public static boolean isPhone(String str) {
		return Regular(str, PHONE);
	}

	/**
	 * é?’ã‚†æŸ‡é?„îˆšæƒ?æ¶“çƒ˜å¢œé?ˆå“„å½¿é?®ï¿½ç»—ï¹€æ‚Žæ?©æ–¿æ´–ture
	 * 
	 * @param str
	 * @return boolean
	 */
	public static boolean isMobile(String str) {
		return Regular(str, MOBILE);
	}

	/**
	 * é?’ã‚†æŸ‡é?„îˆšæƒ?æ¶“ç¯£rl ç»—ï¹€æ‚Žæ?©æ–¿æ´–ture
	 * 
	 * @param str
	 * @return boolean
	 */
	public static boolean isUrl(String str) {
		return Regular(str, URL);
	}

	/**
	 * é?’ã‚†æŸ‡é?„îˆšæƒ?æ¶“ç¯’Pé?¦æ?¿æ½ƒ ç»—ï¹€æ‚Žæ?©æ–¿æ´–ture
	 * 
	 * @param str
	 * @return boolean
	 */
	public static boolean isIpaddress(String str) {
		return Regular(str, IPADDRESS);
	}

	/**
	 * é?’ã‚†æŸ‡ç€›æ¥?î†Œé?„îˆšæƒ?æ¶“çƒ˜æšŸç€›ï¿½å§?ï½ˆç¤‹é??å­˜æšŸ å§?ï½ˆç¤‹å¨´î†¾å?£é??ï¿½ç»—ï¹€æ‚Žæ?©æ–¿æ´–ture
	 * 
	 * @param str
	 * @return boolean
	 */
	public static boolean isNumber(String str) {
		return Regular(str, DOUBLE);
	}

	/**
	 * é?’ã‚†æŸ‡ç€›æ¥?î†Œé?„îˆšæƒ?æ¶“ç¯’NTEGER ç»—ï¹€æ‚Žæ?©æ–¿æ´–ture
	 * 
	 * @param str
	 * @return boolean
	 */
	public static boolean isInteger(String str) {
		return Regular(str, INTEGER);
	}

	/**
	 * 
	 * é?’ã‚†æŸ‡ç€›æ¥?î†Œé?„îˆšæƒ?æ¶“çƒ˜î„œé??å­˜æšŸå§?ï½…åž¯ç?›ã„¨æ?ªå¯®ï¿½>=0 ç»—ï¹€æ‚Žæ?©æ–¿æ´–ture
	 * 
	 * @param str
	 * @return boolean
	 */
	public static boolean isINTEGER_NEGATIVE(String str) {
		return Regular(str, INTEGER_NEGATIVE);
	}

	/**
	 * é?’ã‚†æŸ‡ç€›æ¥?î†Œé?„îˆšæƒ?æ¶“é¸¿ç¤‹é??å­˜æšŸå§?ï½…åž¯ç?›ã„¨æ?ªå¯®ï¿½<=0 ç»—ï¹€æ‚Žæ?©æ–¿æ´–ture
	 * 
	 * @param str
	 * @return boolean
	 */
	public static boolean isINTEGER_POSITIVE(String str) {
		return Regular(str, INTEGER_POSITIVE);
	}

	/**
	 * é?’ã‚†æŸ‡ç€›æ¥?î†Œé?„îˆšæƒ?æ¶“ç¯‹OUBLE ç»—ï¹€æ‚Žæ?©æ–¿æ´–ture
	 * 
	 * @param str
	 * @return boolean
	 */
	public static boolean isDouble(String str) {
		return Regular(str, DOUBLE);
	}

	/**
	 * é?’ã‚†æŸ‡ç€›æ¥?î†Œé?„îˆšæƒ?æ¶“çƒ˜î„œå¨´î†¾å?£é??ç‰ˆî„œé?’æ¬’ã€ƒæ?ˆæƒ§ç´¡ >=0 ç»—ï¹€æ‚Žæ?©æ–¿æ´–ture
	 * 
	 * @param str
	 * @return boolean
	 */
	public static boolean isDOUBLE_NEGATIVE(String str) {
		return Regular(str, DOUBLE_NEGATIVE);
	}

	/**
	 * é?’ã‚†æŸ‡ç€›æ¥?î†Œé?„îˆšæƒ?æ¶“é¸¿ç¤‹å¨´î†¾å?£é??ç‰ˆî„œé?’æ¬’ã€ƒæ?ˆæƒ§ç´¡ <=0 ç»—ï¹€æ‚Žæ?©æ–¿æ´–ture
	 * 
	 * @param str
	 * @return boolean
	 */
	public static boolean isDOUBLE_POSITIVE(String str) {
		return Regular(str, DOUBLE_POSITIVE);
	}

	/**
	 * é?’ã‚†æŸ‡ç€›æ¥?î†Œé?„îˆšæƒ?æ¶“çƒ˜æ£©é?ˆï¿½ç»—ï¹€æ‚Žæ?©æ–¿æ´–ture
	 * 
	 * @param str
	 * @return boolean
	 */
	public static boolean isDate(String str) {
		return Regular(str, DATE_ALL);
	}

	/**
	 * æ¥ å²ƒç˜‰2010-12-10
	 * 
	 * @param str
	 * @return
	 */
	public static boolean isDate1(String str) {
		return Regular(str, DATE_FORMAT1);
	}

	/**
	 * é?’ã‚†æŸ‡ç€›æ¥?î†Œé?„îˆšæƒ?æ¶“å“„å‹¾æ¦«ï¿½ç»—ï¹€æ‚Žæ?©æ–¿æ´–ture
	 * 
	 * @param str
	 * @return boolean
	 */
	public static boolean isAge(String str) {
		return Regular(str, AGE);
	}

	/**
	 * é?’ã‚†æŸ‡ç€›æ¥?î†Œé?„îˆšæƒ?ç“’å‘´æš± ç€›æ¤¾è¦†æ¶“è™¹â”–æ?©æ–¿æ´–fasle, ç“’å‘°ç¹ƒé—€åž®å®³{leng}æ?©æ–¿æ´–ture é?™å¶„ç®£æ?©æ–¿æ´–false
	 * 
	 * @param str
	 * @param leng
	 * @return boolean
	 */
	public static boolean isLengOut(String str, int leng) {
		return StrisNull(str) ? false : str.trim().length() > leng;
	}

	/**
	 * é?’ã‚†æŸ‡ç€›æ¥?î†Œé?„îˆšæƒ?ç“’å‘´æš±, ç“’å‘°ç¹ƒé—€åž®å®³{leng}æ?©æ–¿æ´–ture é?™å¶„ç®£æ?©æ–¿æ´–false
	 * 
	 * @param str
	 * @param leng
	 * @return boolean
	 */
	public static boolean isLengOver(String str, int leng) {
		if(str.trim().length() <= leng) {
			return true;
		}
		return false;
	}
	
	/**
	 * é?’ã‚†æŸ‡ç€›æ¥?î†Œé?„îˆšæƒ?æ¶“é¸¿éŸ©æµ å€Ÿç˜‰ ç»—ï¹€æ‚Žæ?©æ–¿æ´–ture
	 * 
	 * @param str
	 * @return boolean
	 */
	public static boolean isIdCard(String str) {
		if (StrisNull(str))
			return false;
		if (str.trim().length() == 15 || str.trim().length() == 18) {
			return Regular(str, IDCARD);
		} else {
			return false;
		}
	}

	/**
	 * é?’ã‚†æŸ‡ç€›æ¥?î†Œé?„îˆšæƒ?æ¶“æ´ªå?–ç¼‚ï¿½ç»—ï¹€æ‚Žæ?©æ–¿æ´–ture
	 * 
	 * @param str
	 * @return boolean
	 */
	public static boolean isCode(String str) {
		return Regular(str, CODE);
	}

	/**
	 * é?’ã‚†æŸ‡ç€›æ¥ƒîƒ?æ¶“å?‰æ§¸æ¶“å¶†æ§¸é??ã„©å„´é?„îˆ›çœ½ç€›ï¿½
	 * 
	 * @param str
	 * @return boolean
	 */
	public static boolean isChina(String str) {
		return Regular(str, STR_CHINA);
	}

	/**
	 * é?’ã‚†æŸ‡ç€›æ¥ƒîƒ?æ¶“å?‰æ§¸æ¶“å¶†æ§¸é??ã„©å„´é?„îˆ?å«³é?‚å›§ç“§å§£ï¿½
	 * 
	 * @param str
	 * @return boolean
	 */
	public static boolean isEnglish(String str) {
		return Regular(str, STR_ENG);
	}

	/**
	 * é?’ã‚†æŸ‡ç€›æ¥ƒîƒ?æ¶“å?‰æ§¸æ¶“å¶†æ§¸é??ã„©å„´é?„îˆ?å«³é?‚å›§ç“§å§£ï¿½é??æ?¿ç“§
	 * 
	 * @param str
	 * @return boolean
	 */
	public static boolean isENG_NUM(String str) {
		return Regular(str, STR_ENG_NUM);
	}

	/**
	 * é?’ã‚†æŸ‡ç€›æ¥ƒîƒ?æ¶“å?‰æ§¸æ¶“å¶†æ§¸é??ã„©å„´é?„îˆ?å«³é?‚å›§ç“§å§£ï¿½é??æ?¿ç“§+æ¶“å¬ªåž?ç»¾ï¿½
	 * 
	 * @param str
	 * @return boolean
	 */
	public static boolean isENG_NUM_(String str) {
		return Regular(str, STR_ENG_NUM_);
	}

	/**
	 * æ?©å›¨æŠ¤é?—è§„ç•©ç€›æ¥ƒîƒ?æ¶“ï¿½æ?©æ–¿æ´–æ?©å›¨æŠ¤é?šåº£æ®‘ç€›æ¥ƒîƒ?æ¶“ï¿½
	 * 
	 * @param str
	 * @return boolean
	 */
	public static String filterStr(String str) {
		Pattern p = Pattern.compile(STR_SPECIAL);
		Matcher m = p.matcher(str);
		return m.replaceAll("").trim();
	}

	/**
	 * é?–å½’åŽ¤é?„îˆšæƒ?ç»—ï¹€æ‚Žå§?ï½…åž¯ç?›ã„¨æ?ªå¯®å¼?attern é?–å½’åŽ¤æ?©æ–¿æ´–true
	 * 
	 * @param str
	 *            é?–å½’åŽ¤é?¨å‹«ç“§ç»—ï¸¿è¦†
	 * @param pattern
	 *            é?–å½’åŽ¤å¦¯â€³ç´¡
	 * @return boolean
	 */
	private static boolean Regular(String str, String pattern) {
		if (null == str || str.trim().length() <= 0)
			return false;
		Pattern p = Pattern.compile(pattern);
		Matcher m = p.matcher(str);
		return m.matches();
	}

	/**
	 * é?’ã‚†æŸ‡é?„îˆ™ç¬‰é?„îˆœîž?ç€›ï¹?î…¸é??ç‰ˆç¡¶ æ¿¡å‚›ç?‰é?„ï¿½æ?©æ–¿æ´–true é?–å½’åŽ¤ç»‰æˆ?î„Ÿç’?â„ƒæšŸ eéŽ´æ ¬ï¿½Eè¹‡å‘´ã€?é?‘è™¹å¹‡é?ˆå¤‰ç¬–é?™î?…æ¹?æ¶“ï¿½î‚¼ ç¼?æ’³ç†¬æ¶“å¶…æƒˆD é?–å½’åŽ¤å¦¯â€³ç´¡é?™îˆšå¼¬é‘°å†©æ¹°ç»«è¯²ç•¾æ¶”å¤Œæ®‘
	 * SCIENTIFIC_Aé”›å­²CIENTIFIC_B,SCIENTIFIC_C,SCIENTIFIC_D é‘»ãƒ¥åž½é?‚î…?è´Ÿé??æœµç²¬å¦¯â€³ç´¡é?™îˆ?çšŸé?¢ï¿½
	 * Regular(String str,String pattern)é?‚è§„ç¡¶
	 * 
	 * @param str
	 *            ç»‰æˆ?î„Ÿç’?â„ƒæšŸç€›æ¥ƒîƒ?æ¶“ï¿½
	 * @return boolean
	 */
	public static boolean isScientific(String str) {
		if (StrisNull(str))
			return false;
		return Regular(str, VerifyUtil.SCIENTIFIC_A);
	}
}
